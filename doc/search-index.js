var searchIndex = JSON.parse('{\
"collections":{"doc":"","t":"AANNNNDDEGNNNNNENNNNNLLLLLLLLLMLLLLLLLLLLLLLLLMLLLMMLLLLLLLLLLLLMLLLLMDDLLLLLLLLMLLLLLLMMLLLLLLLLL","n":["field","schema","Boolean","Char","Date","Double","Field","FieldOptions","FieldType","Fields","Id","InsertedAt","Integer","Json","Serial","SystemField","Text","Time","Timestamp","UUID","UpdatedAt","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","iterator","name","names","new","new","not_null","options","to_sql","to_sql","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","unique","Schema","SchemaBuilder","add_field","borrow","borrow","borrow_mut","borrow_mut","build","default","default","fields","from","from","into","into","new","new","schema","table_name","to_sql","try_from","try_from","try_into","try_into","type_id","type_id","with_field","with_table_name"],"q":["collections","","collections::field","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","collections::schema","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","The type of a field. This is used to determine the type of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Create a new field with the given name and type. The name …","Create a new FieldOptions struct with the given options. …","","","","","","","","","","","","","","","","","","","","","","","Add a field to the schema. The name and type are required. …","","","","","Build the schema.","Create a new Schema, with the default fields. The default …","Create a new SchemaBuilder.","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new Schema, with an empty list of fields.","Create a new Schema, with an empty list of fields.","","","Generate the SQL for creating the table. The SQL will be …","","","","","","","Add a field to the schema builder. The name and type are …","Set the table name for the schema. The default table name …"],"i":[0,0,2,2,2,2,0,0,0,0,4,4,2,2,2,0,2,2,2,2,4,4,12,2,1,4,12,2,1,1,1,2,1,4,2,2,1,4,12,2,1,4,12,2,1,4,12,4,12,1,1,12,4,12,4,2,4,12,2,1,4,12,2,1,12,4,12,2,1,1,0,0,15,15,16,15,16,16,15,16,15,15,16,15,16,15,16,16,15,15,15,16,15,16,15,16,16,16],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],0,[[2,2],3],[[1,1],3],[[4,5],6],[[2,5],6],[[2,5],6],[[1,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[4]]]],0,[[],[[9,[8]]]],[[10,2,[11,[1]]],12],[[3,3,[11,[8]]],1],0,0,[4,8],[12,8],[[],8],[[],8],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,[[],14],[[],14],[[],14],[[],14],0,0,0,[[15,10,2,[11,[1]]]],[[]],[[]],[[]],[[]],[16,15],[[],15],[[],16],0,[[]],[[]],[[]],[[]],[[],15],[[],16],0,0,[15,8],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[16,10,2,[11,[1]]],16],[[16,10],16]],"p":[[3,"FieldOptions"],[4,"FieldType"],[15,"bool"],[4,"SystemField"],[3,"Formatter"],[6,"Result"],[3,"Iter"],[3,"String"],[3,"Vec"],[15,"str"],[4,"Option"],[3,"Field"],[4,"Result"],[3,"TypeId"],[3,"Schema"],[3,"SchemaBuilder"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
